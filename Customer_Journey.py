# -- coding: utf-8 --
import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

st.set_page_config(layout="wide")
st.title("Customer Journey & History | ุฑุญูุฉ ุงูุนููู ูุชุงุฑูุฎ ุงูุฃุตู")
st.caption("ุชุญููู ุงูุชูุจุค ููุงุจู ุงููุงูุน - ููุถุญ ุณูููุฉ ุงูุนูู ูููุฉ ุงููููุฐุฌ")

# ุจูุงูุงุช ููููุฉ ูุชุงุฑูุฎ ุงููุถุฎุฉ (Vibration and ARIS Trend)
dates = pd.to_datetime(pd.date_range(start="2025-01-01", periods=15, freq='W'))
historical_data = {
    'Date': dates,
    'ARIS Index': [10, 18, 25, 33, 40, 52, 65, 78, 90, 85, 70, 50, 40, 35, 30],
    'Vibration (mm/s)': [2.5, 3.0, 3.5, 4.0, 4.5, 5.5, 6.8, 7.5, 8.2, 8.0, 7.5, 7.0, 6.5, 6.0, 5.5],
    'Historical Corrosion Score': [0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.6, 0.6, 0.5, 0.5, 0.4]
}
history_df = pd.DataFrame(historical_data)

st.markdown("### ๐ ูุณุงุฑ ูุคุดุฑ ARIS ุงูุชุงุฑูุฎู (ุขุฎุฑ 15 ุฃุณุจูุนุงู)")
st.info("๐ก *ููุทุฉ ูููุฉ:* ูุธูุฑ ูุฐุง ุงููุฎุทุท ููู ูุฌุญ ARIS ูู ุงูุชูุจุค ูุจู ุฃู ูุตู ุงูุฎุทุฑ ุฅูู ุงูุญุฏ ุงูููุงุฆู (80%) ููุง ูููุน ุงููุดู ุงููุงุฑุซู.")

fig = px.line(history_df, x='Date', y='ARIS Index', title='ARIS Index Trend Over Time', line_shape='spline')
fig.add_hline(y=80, line_dash="dash", line_color="red", annotation_text="ุงูุญุฏ ุงูููุงุฆู (80%)", annotation_position="top left")
# ูุญุงูุงุฉ ูุชุงุฑูุฎ ุงุชุฎุงุฐ ูุฑุงุฑ ุงูุฅููุงู (ุนูุฏ ุงูุฃุณุจูุน 8 ุชูุฑูุจุงู)
fig.add_vline(x=history_df['Date'].iloc[8], line_dash="dash", line_color="blue", annotation_text="โ ุชู ุงูุฅููุงู ุงูููุฎุทุท ูู ูู ูุฐุง ุงูุชุงุฑูุฎ", annotation_position="bottom right")

st.plotly_chart(fig, use_container_width=True)

# ==========================================================
# ุชุญููู ุฌูุฏุฉ ุงููุนุฏู (ุงูุชุขูู ุงูุฏุงุฎูู)
# ==========================================================
st.markdown("---")
st.markdown("### ๐ฌ ุชุญููู ุงูุนูุงูู ุงููุฎููุฉ: ุงูุชุขูู ููุงุจู ุงูุงูุชุฒุงุฒ")
st.warning("*ุงูููุฏ ุงูููุนุงูุฌ:* ูุดููุฉ ุฃู ุงูุงูุชุฒุงุฒ ูุฏ ูููู ููุฎูุถุงู ููู ุงูุชุขูู ุงูุฏุงุฎูู ูุณุจุจ ุงูุฎุทุฑ ุงูุญูููู.")

col_a, col_b = st.columns(2)

with col_a:
    st.markdown("#### (1) ุงูุงูุชุฒุงุฒ ุงููุญุธู (Vibration)")
    fig_vib = px.line(history_df, x='Date', y='Vibration (mm/s)', title='Vibration Trend', line_shape='spline')
    fig_vib.add_hline(y=7.5, line_dash="dash", line_color="green", annotation_text="ุญุฏ ุงูุงูุชุฒุงุฒ ุงููุชูุณุท")
    st.plotly_chart(fig_vib, use_container_width=True)

with col_b:
    st.markdown("#### (2) ุงูุฎุทุฑ ุงูุชุงุฑูุฎู (Corrosion Score)")
    fig_corr = px.area(history_df, x='Date', y='Historical Corrosion Score', title='Corrosion Trend (ILI/OSI)', line_shape='spline')
    fig_corr.update_traces(fill='tozeroy', line_color='orange')
    st.plotly_chart(fig_corr, use_container_width=True)

st.markdown("""
ูุธุงู ARIS ูุชุบูุจ ุนูู ูุฐู ุงููุดููุฉ ุนุจุฑ:
1.  *ุงูุฏูุฌ ุงูุฐูู:* ARIS ูู ูุคุดุฑ ูุงุญุฏ ูุฌูุน ุจูู ุงูุงูุชุฒุงุฒ (ุงูุนุงูู ุงูุณุฑูุน) ูุงูุชุขูู (ุงูุนุงูู ุงูุจุทูุก ุงููุฎูู)ุ ููุง ูููุน ุงูููุงุฌุขุช.
2.  *ุงูู XAI ุงูููุฌู:* ุงูุชูุณูุฑ ุงูููุฑู ูุญุฏุฏ *ุงูุณุจุจ ุงูุฌุฐุฑู* (ุงูุฐู ูุฏ ูููู ุงูุชุขูู ุญุชู ูู ูุงู ุงูุงูุชุฒุงุฒ ููุจููุงู)ุ ูููุฌู ูุฑูู ุงูุตูุงูุฉ ุฅูู ุงููุญุต ุงูุฏุงุฎูู ููุฑุงู.
""")